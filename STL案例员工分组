#include<iostream>
using namespace std;
#include<vector>
#include<map>
#include<ctime>
class worker
{
public:
	string m_name;
	int m_salary;
};
void createworker(vector<worker>&v)
{
	string nameseed = "abcdefghij";
	for (int i = 0; i < 10; i++)
	{
		worker worker;
		worker.m_name = "员工";
		worker.m_name += nameseed[i];
		worker.m_salary = rand() % 10000 + 10000;
		v.push_back(worker);

	}
}
void setgroup(vector<worker>& v, multimap<int, worker>& m)
{
	for (vector<worker>::iterator it = v.begin(); it != v.end(); it++)
	{
		int deptid = rand() % 3;
		m.insert(make_pair(deptid, *it));
	}
}
void showworkerbygourp(multimap<int, worker>& m)
{
	cout << "策划部门：" << endl;

	multimap<int,worker>::iterator pos=m.find(0);
	int count = m.count(0);
	int index = 0;
	for (; pos != m.end() && index < count; pos++, index++)
	{
		cout << "姓名：" << pos->second.m_name  << "     工资：" << pos->second.m_salary << endl;
	}
	cout << "美术部门：" << endl;

	pos = m.find(1);
	 count = m.count(1);
	 index = 0;
	for (; pos != m.end() && index < count; pos++, index++)
	{
		cout << "姓名：" << pos->second.m_name << "     工资：" << pos->second.m_salary << endl;
	}
	cout << "研发部门：" << endl;

	pos = m.find(2);
	count = m.count(2);
	index = 0;
	for (; pos != m.end() && index < count; pos++, index++)
	{
		cout << "姓名：" << pos->second.m_name << "     工资：" << pos->second.m_salary << endl;
	}
}
int  main()
{
	srand((unsigned int)time(NULL));
	vector<worker>vworker;
	createworker(vworker);
	multimap<int,worker>mworker;
	setgroup(vworker, mworker);
	showworkerbygourp(mworker);
	return 0;
}
